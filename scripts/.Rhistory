exp_medium_to_high <- "The gene is overexpressed"
} else if (t==TRUE) {
exp_medium_to_high <-"the gene is underexpressed"
} else {
exp_medium_to_high <-"The gene is not differencially expressed"
}
exp_medium_to_high
#export the result
#run line 34 to download the result
write.table(exp_medium_to_high,"expression_profile_medium_to_high.txt")
#methylation profile study
#replace the "HDAC4"by your gene symbol and Run lines
promoter_methylation_medium_to_high<- read_excel("promoter_methylation_medium_to_high.xlsx")
cpg_met2 <- promoter_methylation_medium_to_high %>%
filter(gene =="STAT3")
#result
cpg_met2
#export result
write.table( cpg_met2 , "cpg_methylation_medium_to_high.txt" , row.names=F , sep = ",")
down_gene3 <- read_csv("down_exp_medium.csv")
up_gene3  <- read_csv("up_exp-medium.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run lines
v <- any(up_gene3 =="STAT3")
r <-  any(down_gene3 =="STAT3")
if (v==TRUE){
exp_medium <- "The gene is overexpressed"
} else if (r==TRUE) {
exp_medium <-"the gene is underexpressed"
} else {
exp_medium <-"The gene is not differencially expressed"
}
exp_medium
#export the result
#run line 34 to download the result
write.table(exp_medium,"expression_profile_medium.txt")
#methylation profile
#replace the "UXS1"by your gene symbol and Run
promoter_methylation_medium<- read_excel("promoter_methylation_medium.xlsx")
cpg_met3 <- promoter_methylation_medium %>%
filter(gene =="STAT3")
#result
cpg_met3
#export result
write.table( cpg_met3 , "cpg_methylation_medium.txt" , row.names=F , sep = ",")
down_gene <- read_csv("down_exp_high.csv")
up_gene  <- read_csv("up_exp_high.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run lines
x <- any(up_gene =="FOXP3")
y <-  any(down_gene =="FOXP3")
if (x==TRUE){
exp_high <- "The gene is overexpressed"
} else if (y==TRUE) {
exp_high <-"the gene is underexpressed"
} else {
exp_high <-"The gene is not differencially expressed"
}
exp_high
#export the result
#run line  to download the result
write.table(exp_high,"expression_profile_high.txt")
#methylation profile study
#replace the "XRCC4"by your gene symbole and Run
promoter_methylation_high <- read_excel("promoter_methylation_high.xlsx")
cpg_met <- promoter_methylation_high %>%
filter(gene =="FOXP3")
cpg_met
#export result
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
down_gene2 <- read_csv("down_exp_medium_to_high.csv")
up_gene2  <- read_csv("up_exp_medium_to_high.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run line 22:31
z <- any(up_gene2 =="FOXP3")
t <-  any(down_gene2 =="FOXP3")
if (z==TRUE){
exp_medium_to_high <- "The gene is overexpressed"
} else if (t==TRUE) {
exp_medium_to_high <-"the gene is underexpressed"
} else {
exp_medium_to_high <-"The gene is not differencially expressed"
}
exp_medium_to_high
#export the result
#run line 34 to download the result
write.table(exp_medium_to_high,"expression_profile_medium_to_high.txt")
#methylation profile study
#replace the "HDAC4"by your gene symbol and Run lines
promoter_methylation_medium_to_high<- read_excel("promoter_methylation_medium_to_high.xlsx")
cpg_met2 <- promoter_methylation_medium_to_high %>%
filter(gene =="FOXP3")
#result
cpg_met2
#export result
write.table( cpg_met2 , "cpg_methylation_medium_to_high.txt" , row.names=F , sep = ",")
down_gene3 <- read_csv("down_exp_medium.csv")
up_gene3  <- read_csv("up_exp-medium.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run lines
v <- any(up_gene3 =="FOXP3")
r <-  any(down_gene3 =="FOXP3")
if (v==TRUE){
exp_medium <- "The gene is overexpressed"
} else if (r==TRUE) {
exp_medium <-"the gene is underexpressed"
} else {
exp_medium <-"The gene is not differencially expressed"
}
exp_medium
#export the result
#run line 34 to download the result
write.table(exp_medium,"expression_profile_medium.txt")
#methylation profile
#replace the "UXS1"by your gene symbol and Run
promoter_methylation_medium<- read_excel("promoter_methylation_medium.xlsx")
cpg_met3 <- promoter_methylation_medium %>%
filter(gene =="FOXP3")
#result
cpg_met3
#export result
write.table( cpg_met3 , "cpg_methylation_medium.txt" , row.names=F , sep = ",")
x <- any(up_gene =="STAT5")
y <-  any(down_gene =="STAT5")
if (x==TRUE){
exp_high <- "The gene is overexpressed"
} else if (y==TRUE) {
exp_high <-"the gene is underexpressed"
} else {
exp_high <-"The gene is not differencially expressed"
}
exp_high
#export the result
#run line  to download the result
write.table(exp_high,"expression_profile_high.txt")
#methylation profile study
#replace the "XRCC4"by your gene symbole and Run
promoter_methylation_high <- read_excel("promoter_methylation_high.xlsx")
cpg_met <- promoter_methylation_high %>%
filter(gene =="STAT5")
#result
cpg_met
z <- any(up_gene2 =="STAT5")
t <-  any(down_gene2 =="STAT5")
if (z==TRUE){
exp_medium_to_high <- "The gene is overexpressed"
} else if (t==TRUE) {
exp_medium_to_high <-"the gene is underexpressed"
} else {
exp_medium_to_high <-"The gene is not differencially expressed"
}
exp_medium_to_high
#export the result
#run line 34 to download the result
write.table(exp_medium_to_high,"expression_profile_medium_to_high.txt")
#methylation profile study
#replace the "HDAC4"by your gene symbol and Run lines
promoter_methylation_medium_to_high<- read_excel("promoter_methylation_medium_to_high.xlsx")
cpg_met2 <- promoter_methylation_medium_to_high %>%
filter(gene =="STAT5")
#result
cpg_met2
#export result
write.table( cpg_met2 , "cpg_methylation_medium_to_high.txt" , row.names=F , sep = ",")
v <- any(up_gene3 =="STAT5")
r <-  any(down_gene3 =="STAT5")
if (v==TRUE){
exp_medium <- "The gene is overexpressed"
} else if (r==TRUE) {
exp_medium <-"the gene is underexpressed"
} else {
exp_medium <-"The gene is not differencially expressed"
}
exp_medium
#export the result
#run line 34 to download the result
write.table(exp_medium,"expression_profile_medium.txt")
#methylation profile
#replace the "UXS1"by your gene symbol and Run
promoter_methylation_medium<- read_excel("promoter_methylation_medium.xlsx")
cpg_met3 <- promoter_methylation_medium %>%
filter(gene =="STAT5")
#result
cpg_met3
promoter_methylation_medium<- read_excel("promoter_methylation_medium.xlsx")
cpg_met3 <- promoter_methylation_medium %>%
filter(gene =="STAT5")
#result
cpg_met3
promoter_methylation_high <- read_excel("promoter_methylation_high.xlsx")
cpg_met <- promoter_methylation_high %>%
filter(gene =="STAT3;STAT3;STAT3")
#result
cpg_met
#export result
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
cpg_met <- promoter_methylation_high %>%
filter(gene =="STAT5B")
#result
cpg_met
#export result
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
M <- any(promoter_methylation_high )
if (M==TRUE){
cpg_met <- promoter_methylation_high %>%
filter(gene =="FOXP3")
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
} else {
k <- "The gene promoter is not methylated "
}
M <- any(promoter_methylation_high =="FOXP3" )
if (M==TRUE){
cpg_met <- promoter_methylation_high %>%
filter(gene =="FOXP3")
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
} else {
k <- "The gene promoter is not methylated "
}
#methylation profile study
#replace the "XRCC4"by your gene symbole and Run
promoter_methylation_high <- read_excel("promoter_methylation_high.xlsx")
M <- any(promoter_methylation_high =="FOXP3" )
M <- any(promoter_methylation_high =="STAT5A" )
if (M==TRUE){
cpg_met <- promoter_methylation_high %>%
filter(gene =="FOXP3")
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
} else {
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}
M <- any(promoter_methylation_high =="FOXP3" )
if (M==TRUE){
cpg_met <- promoter_methylation_high %>%
filter(gene =="FOXP3")
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}else if (M==NA) {
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}  else {
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}
M <- any(promoter_methylation_high =="FOXP3" )
if (M==TRUE){
cpg_met <- promoter_methylation_high %>%
filter(gene =="FOXP3")
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}
else if (M==NA) {
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}  else {
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}
M <- any(promoter_methylation_high =="FOXP3" )
if (M==TRUE){
cpg_met <- promoter_methylation_high %>%
filter(gene =="FOXP3")
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}  else if (M==NA) {
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}  else {
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
}
cpg_met <- "The gene promoter is not methylated "
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
##### Run line  3:7
# set directory
setwd("C:/Users/LENOVO/Desktop/Script")
#cal libraries
library(survival)
library(tidyverse)
library(readxl)
#################################################################################
# Gene expression in High prevalence countries  ----------------------------------------------------
GE_high <-  read_csv("expression_high.csv")
setwd("~/omic project/to submit/Script")
#################################################################################
# Gene expression in High prevalence countries  ----------------------------------------------------
GE_high <-  read_csv("expression_high.csv")
#################################################################################
# Gene expression in High prevalence countries  ----------------------------------------------------
GE_high <-  read_csv("expression_high.xlsx")
View(GE_high)
#################################################################################
# Gene expression in High prevalence countries  ----------------------------------------------------
GE_high <-  read_table("expression_high.xlsx")
#################################################################################
# Gene expression in High prevalence countries  ----------------------------------------------------
expression_high <- read_excel("expression_high.xlsx")
View(expression_high)
expression_high %>%
select(c(1))%>%
expression_high %>%
select(c(1))%>%
filter(MACC1)
#################################################################################
# Gene expression in High prevalence countries  ----------------------------------------------------
expression_high <- read_excel("expression_high.xlsx")
expression_high %>%
select(c(1))%>%
filter(MACC1)
expression_high %>%
select(c(1))%>%
filter("MACC1")
?rownames_to_column()
expression_high %>%
rownames_to_column()
?filter
expression_high %>%
filter(Gene.symbol, "MACC1")
expression_high %>%
filter(Gene.symbol== "MACC1")
e<- expression_high %>%
filter(Gene.symbol== "MACC1")
View(e)
write.table(e,"expression_profile_high.txt")
expression_medium <- read_excel("expression_medium.xlsx")
e2<- expression_mediumh %>%
filter(Gene.symbol== "MACC1")
write.table(e,"expression_profile_medium.txt")
expression_medium <- read_excel("exp_medium.xlsx")
e2<- expression_mediumh %>%
filter(Gene.symbol== "MACC1")
write.table(e,"expression_profile_medium.txt")
View(expression_medium)
expression_medium <- read_excel("exp_medium.xlsx")
e2<- expression_mediumh %>%
filter(gene== "MACC1")
write.table(e,"expression_profile_medium.txt")
# Gene expression in medium to high prevalence ----------------------------------------------------------
exp_medium_to_high <- read_csv("up_exp_medium_to_high.csv")
View(exp_medium_to_high)
# Gene expression in medium to high prevalence ----------------------------------------------------------
expression_medium_to_high <- read_excel("expression_medium_to_high.xlsx")
expression_medium_to_high <- read_excel("expression_medium_to_high.xlsx")
e2<- expression_medium_to_high  %>%
filter(Gene.symbol== "MACC1")
write.table(e,"expression_profile_medium_to_high.txt")
e2
e
expression_medium <- read_excel("expression_medium.xlsx")
expression_medium <- read_excel("exp_medium.xlsx")
expression_medium <- read_excel("exp_medium.xlsx")
e2<- expression_medium  %>%
filter(Gene.symbol== "MACC1")
e2
write.table(e,"expression_profile_medium.txt")
##### Run line  3:7
# set directory
setwd("C:/Users/LENOVO/Desktop/Script")
#cal libraries
library(survival)
library(tidyverse)
library(readxl)
#to analyze the gene data for all the prevalence area change the gene symbol to your target gene symbol, select all and run the code
# Gene expression in High prevalence countries  ----------------------------------------------------
expression_high <- read_excel("expression_high.xlsx")
?rownames_to_column()
e<- expression_high %>%
filter(Gene.symbol== "STAT5A")
e
write.table(e,"expression_profile_high.txt")
setwd("~/omic project/to submit/Script")
# Gene expression in High prevalence countries  ----------------------------------------------------
expression_high <- read_excel("expression_high.xlsx")
?rownames_to_column()
e<- expression_high %>%
filter(Gene.symbol== "STAT5A")
e
write.table(e,"expression_profile_high.txt")
#  Is the Gene Differencially expressed in high prevalence countries ? --------
#up_gene mean over_expressed genes
#down_gene mean _ genes
#select and Run lines
down_gene <- read_csv("down_exp_high.csv")
up_gene  <- read_csv("up_exp_high.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run lines
x <- any(up_gene =="STAT5A")
y <-  any(down_gene =="STAT5A")
if (x==TRUE){
exp_high <- "The gene is overexpressed"
} else if (y==TRUE) {
exp_high <-"the gene is underexpressed"
} else {
exp_high <-"The gene is not differencially expressed"
}
exp_high
#export the result
#run line  to download the result
write.table(exp_high,"DEG_high.txt")
# Gene expression in medium to high prevalence ----------------------------------------------------------
expression_medium_to_high <- read_excel("expression_medium_to_high.xlsx")
e2<- expression_medium_to_high  %>%
filter(Gene.symbol== "STAT5A")
e2
write.table(e,"expression_profile_medium_to_high.txt")
#methylation profile study
#replace the "XRCC4"by your gene symbole and Run
promoter_methylation_high <- read_excel("promoter_methylation_high.xlsx")
cpg_met <- promoter_methylation_high %>%
filter(gene =="STAT5A")
#result
cpg_met
#export result
write.table( cpg_met , "cpg_methylation_high.txt" , row.names=F , sep = ",")
# Gene expression in medium to high prevalence ----------------------------------------------------------
expression_medium_to_high <- read_excel("expression_medium_to_high.xlsx")
e2<- expression_medium_to_high  %>%
filter(Gene.symbol== "STAT5A")
e2
write.table(e,"expression_profile_medium_to_high.txt")
#up_gene mean over_expressed genes
#down_gene mean under_expressed genes
#select and Run line 16 and line 17
down_gene2 <- read_csv("down_exp_medium_to_high.csv")
up_gene2  <- read_csv("up_exp_medium_to_high.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run line 22:31
z <- any(up_gene2 =="STAT5A")
t <-  any(down_gene2 =="STAT5A")
if (z==TRUE){
exp_medium_to_high <- "The gene is overexpressed"
} else if (t==TRUE) {
exp_medium_to_high <-"the gene is underexpressed"
} else {
exp_medium_to_high <-"The gene is not differencially expressed"
}
exp_medium_to_high
#export the result
#run line 34 to download the result
write.table(exp_medium_to_high,"DEG_medium_to_high.txt")
#methylation profile study
#replace the "HDAC4"by your gene symbol and Run lines
promoter_methylation_medium_to_high<- read_excel("promoter_methylation_medium_to_high.xlsx")
cpg_met2 <- promoter_methylation_medium_to_high %>%
filter(gene =="STAT5A")
#result
cpg_met2
#export result
write.table( cpg_met2 , "cpg_methylation_medium_to_high.txt" , row.names=F , sep = ",")
expression_medium <- read_excel("exp_medium.xlsx")
e2<- expression_medium  %>%
filter(Gene.symbol== "STAT5A")
e2
write.table(e,"expression_profile_medium.txt")
View(expression_medium)
expression_medium <- read_excel("exp_medium.xlsx")
e2<- expression_medium  %>%
filter(gene== "STAT5A")
e2
write.table(e,"expression_profile_medium.txt")
# Is the gene differentially expressed in medium prevalence countries --------
#up_gene mean over_expressed genes
#down_gene mean under_expressed genes
#select and Run lines
down_gene3 <- read_csv("down_exp_medium.csv")
up_gene3  <- read_csv("up_exp-medium.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run lines
v <- any(up_gene3 =="STAT5A")
r <-  any(down_gene3 =="STAT5A")
if (v==TRUE){
exp_medium <- "The gene is overexpressed"
} else if (r==TRUE) {
exp_medium <-"the gene is underexpressed"
} else {
exp_medium <-"The gene is not differencially expressed"
}
exp_medium
#export the result
#run line 34 to download the result
write.table(exp_medium,"DEG_medium.txt")
# Is the gene differentially expressed in low prevalence countries --------
#up_gene mean over_expressed genes
#down_gene mean under_expressed genes
#select and Run lines
down_gene4 <- read_csv("low_exp_medium.csv")
up_gene4  <- read_csv("low-medium.csv")
#Filter gene of interest // replace "APOOL" by the gene symbol
#select and Run lines
o <- any(up_gene4 =="STAT5A")
u <-  any(down_gene4 =="STAT5A")
if (o==TRUE){
exp_low <- "The gene is overexpressed"
} else if (u==TRUE) {
exp_low <-"the gene is underexpressed"
} else {
exp_low <-"The gene is not differencially expressed"
}
exp_low
#export the result
#run line 34 to download the result
write.table(exp_medium,"DEG_low.txt")
#methylation profile study
#replace the "LY6G5C"by your gene symbole and Rune line 39:41
promoter_methylation_low<- read_excel("promoter_methylation_low.xlsx")
cpg_met4 <- promoter_methylation_low %>%
filter(gene =="STAT5A")
#result
cpg_met4
#export result
write.table( cpg_met4 , "cpg_methylation_low.txt" , row.names=F , sep = ",")
miRNA_high <- read_excel("miRNA_high.xlsx")
View(miRNA_high)
miRNA_m_h <- read_excel("miRNA_medium_to_high.xlsx")
View(miRNA_m_h)
